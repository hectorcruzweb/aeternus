.vs-button {
    border-radius: 0;
}
.vs-button-secondary {
    background: $secondary-optional !important;
}

.vs-button-text {
    font-family: $font-family-sans-serif;
}

.vs-button-text {
    span {
        display: inline-block !important;
    }
    display: flex !important;
    justify-content: center !important;
    align-items: center !important;
    gap: 7px;
}

.img-btn {
    display: inline-block !important;
    width: 22px !important;
}

@for $index from 4 to 64 {
    .img-btn-#{$index} {
        display: inline;
        width: #{$index}px !important;
    }
}

.btn-icon-50 {
    height: 36px;
    transition: transform 0.2s; /* Animation */
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 7px 0px !important;
    text-transform: uppercase;
    @extend .font-medium;
    @extend .size-small;
    @extend .color-copy;
    img {
        max-height: 24px !important;
        padding-left: 21px;
    }
    background-color: #{map-get($dark_map, "50")};
    border: 1px solid #{map-get($dark_map, "200")};
    &:hover {
        cursor: pointer;
        background-color: #{map-get($dark_map, "100")};
        @extend .font-bold;
        transform: scale(1.003);
    }

    &.warning-btn {
        background-color: #{map-get($warning_map, "50")};
        border: 1px solid #{map-get($warning_map, "200")};
        &:hover {
            background-color: #{map-get($warning_map, "100")};
        }
    }
}

.btn-select {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 100%;
    text-align: center;
    padding: 0.5rem 0.5rem;
    border-radius: 0;
    line-height: 1.5rem;
    @extend .size-base;
    &--unselected {
        cursor: pointer;
        @extend .bg-danger-50, .border-danger-solid-1, .color-danger-900;
        .action {
            display: none;
        }
    }
    &--selected {
        justify-content: space-between;
        @extend .bg-success-50, .border-success-solid-1, .color-copy;
        text-align: justify;
        .action {
            position: relative;
            display: inline-flex; // flex on the span
            align-items: center; // vertical center
            width: 20px;
            height: 20px;
            padding: 1rem;
            cursor: pointer;
            &::before {
                content: "✖";
                color: red;
                font-weight: bold;
                display: inline-block;
                transition: transform 0.3s ease; // smooth rotation
            }
            &:hover::before {
                transform: rotate(90deg); // rotate 90 degrees on hover
            }
            &::after {
                content: attr(data-tooltip);
                position: absolute;
                top: 50%;
                left: auto; // remove left
                right: 125%; // position to the left of the button
                transform: translateY(-50%);
                background-color: #fde2e2; // example bg
                border: 1px solid #f56565;
                color: #000;
                font-size: 12px;
                padding: 3px 6px;
                border-radius: 2px;
                white-space: nowrap;
                opacity: 0;
                pointer-events: none;
                transition: opacity 0.2s ease;
                z-index: 1000;
            }

            &:hover::after {
                opacity: 1;
            }
        }
    }
}
/* Scoped or global */
.vs-button:disabled {
    background-color: #f5f5f5 !important; /* Tailwind gray-300 */
    color: #718096; /* Tailwind gray-600 */
    cursor: not-allowed;
    opacity: 1; /* ensure it’s visible */
}

.disabled-info {
    background-color: #f5f5f5 !important; /* Tailwind gray-300 */
    color: #718096; /* Tailwind gray-600 */
}

.operacion-seleccionada .action-quitar {
    position: relative;
    display: inline-flex; // flex on the span
    align-items: center; // vertical center
    width: 20px;
    height: 20px;
    padding: 1rem;
    cursor: pointer;
    &::before {
        content: "✖";
        color: red;
        font-weight: bold;
        display: inline-block;
        transition: transform 0.3s ease; // smooth rotation
    }
    &:hover::before {
        transform: rotate(90deg); // rotate 90 degrees on hover
    }
    &::after {
        content: attr(data-tooltip);
        position: absolute;
        top: 50%;
        left: auto; // remove left
        right: 125%; // position to the left of the button
        transform: translateY(-50%);
        background-color: #fde2e2; // example bg
        border: 1px solid #f56565;
        color: #000;
        font-size: 12px;
        padding: 3px 6px;
        border-radius: 2px;
        white-space: nowrap;
        opacity: 0;
        pointer-events: none;
        transition: opacity 0.2s ease;
        z-index: 1000;
    }

    &:hover::after {
        opacity: 1;
    }
}

.vs-checkbox--input:focus {
    outline: none; /* opcional, si no quieres el outline por defecto */
    box-shadow: 0 0 6px 2px rgba(0, 0, 0, 0.3); /* sombra negra semitransparente */
    transition: box-shadow 0.2s ease-in-out; /* suaviza la animación */
}

// Colores definidos
$button-colors: (
    primary: $primary,
    success: $success,
    danger: $danger,
    warning: $warning,
);

// Mixin genérico de focus
@mixin focus-button($shadow-color: rgba(0, 0, 0, 0.3)) {
    outline: none;
    box-shadow: 0 0 6px 3px $shadow-color;
    transition: box-shadow 0.2s ease-in-out;
}

@each $name, $color in $button-colors {
    .vs-button-#{$name}:focus,
    .vs-switch-#{$name}:focus {
        @include focus-button(
            rgba(red($color), green($color), blue($color), 0.4)
        );
    }
}

@each $name, $color in $button-colors {
    .vs-checkbox-#{$name} .vs-checkbox--input:focus + .vs-checkbox {
        outline: none;
        box-shadow: 0
            0
            6px
            2px
            rgba(red($color), green($color), blue($color), 0.4);
    }
}
